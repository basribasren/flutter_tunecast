import '../subscribe_screen/widgets/subscribe_item_widget.dart';import 'bloc/subscribe_bloc.dart';import 'models/subscribe_item_model.dart';import 'models/subscribe_model.dart';import 'package:basri_s_application28/core/app_export.dart';import 'package:flutter/material.dart';class SubscribeScreen extends StatelessWidget {static Widget builder(BuildContext context) { return BlocProvider<SubscribeBloc>(create: (context) => SubscribeBloc(SubscribeState(subscribeModelObj: SubscribeModel()))..add(SubscribeInitialEvent()), child: SubscribeScreen()); } 
@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(backgroundColor: ColorConstant.whiteA700, body: Container(width: double.maxFinite, padding: getPadding(left: 24, top: 10, right: 24, bottom: 10), child: Column(crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.start, children: [CustomImageView(svgPath: ImageConstant.imgArrowleft, height: getSize(28), width: getSize(28), onTap: () {onTapImgArrowleft(context);}), Align(alignment: Alignment.center, child: Padding(padding: getPadding(top: 40), child: Text("msg_subscribe_to_pr".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtUrbanistRomanBold32RedA70002))), Container(width: getHorizontalSize(362), margin: getMargin(left: 9, top: 13, right: 8), child: Text("msg_enjoy_listening2".tr, maxLines: null, textAlign: TextAlign.center, style: AppStyle.txtUrbanistRomanMedium16Gray80001.copyWith(letterSpacing: getHorizontalSize(0.2)))), Padding(padding: getPadding(top: 21), child: BlocSelector<SubscribeBloc, SubscribeState, SubscribeModel?>(selector: (state) => state.subscribeModelObj, builder: (context, subscribeModelObj) {return ListView.separated(physics: NeverScrollableScrollPhysics(), shrinkWrap: true, separatorBuilder: (context, index) {return SizedBox(height: getVerticalSize(24));}, itemCount: subscribeModelObj?.subscribeItemList.length ?? 0, itemBuilder: (context, index) {SubscribeItemModel model = subscribeModelObj?.subscribeItemList[index] ?? SubscribeItemModel(); return SubscribeItemWidget(model, onTapColumnvector: () {onTapColumnvector(context);});});}))])))); } 
onTapColumnvector(BuildContext context) { NavigatorService.pushNamed(AppRoutes.paymentMethodScreen); } 
onTapImgArrowleft(BuildContext context) { NavigatorService.goBack(); } 
 }
