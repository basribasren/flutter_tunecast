import 'bloc/edit_profile_bloc.dart';import 'models/edit_profile_model.dart';import 'package:basri_s_application28/core/app_export.dart';import 'package:basri_s_application28/widgets/app_bar/appbar_image.dart';import 'package:basri_s_application28/widgets/app_bar/appbar_title.dart';import 'package:basri_s_application28/widgets/app_bar/custom_app_bar.dart';import 'package:basri_s_application28/widgets/custom_button.dart';import 'package:basri_s_application28/widgets/custom_drop_down.dart';import 'package:basri_s_application28/widgets/custom_text_form_field.dart';import 'package:flutter/material.dart';class EditProfileScreen extends StatelessWidget {static Widget builder(BuildContext context) { return BlocProvider<EditProfileBloc>(create: (context) => EditProfileBloc(EditProfileState(editProfileModelObj: EditProfileModel()))..add(EditProfileInitialEvent()), child: EditProfileScreen()); } 
@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(backgroundColor: ColorConstant.whiteA700, resizeToAvoidBottomInset: false, appBar: CustomAppBar(height: getVerticalSize(48), leadingWidth: 52, leading: AppbarImage(height: getSize(28), width: getSize(28), svgPath: ImageConstant.imgArrowleft, margin: getMargin(left: 24, top: 10, bottom: 10), onTap: () {onTapArrowleft36(context);}), title: AppbarTitle(text: "lbl_edit_profile".tr, margin: getMargin(left: 16))), body: Container(width: double.maxFinite, padding: getPadding(left: 24, top: 31, right: 24, bottom: 31), child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [BlocSelector<EditProfileBloc, EditProfileState, TextEditingController?>(selector: (state) => state.statusFillTypeDefaultController, builder: (context, statusFillTypeDefaultController) {return CustomTextFormField(focusNode: FocusNode(), controller: statusFillTypeDefaultController, hintText: "lbl_andrew_ainsley".tr);}), BlocSelector<EditProfileBloc, EditProfileState, TextEditingController?>(selector: (state) => state.statusFillTypeDefaultOneController, builder: (context, statusFillTypeDefaultOneController) {return CustomTextFormField(focusNode: FocusNode(), controller: statusFillTypeDefaultOneController, hintText: "lbl_andrew".tr, margin: getMargin(top: 24));}), GestureDetector(onTap: () {onTapRowdate(context);}, child: Container(margin: getMargin(top: 24), padding: getPadding(left: 20, top: 18, right: 20, bottom: 18), decoration: AppDecoration.fillGray50.copyWith(borderRadius: BorderRadiusStyle.roundedBorder16), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Padding(padding: getPadding(top: 1, bottom: 1), child: BlocSelector<EditProfileBloc, EditProfileState, String?>(selector: (state) => state.editProfileModelObj!.dateTxt, builder: (context, dateTxt) {return Text(dateTxt ?? "", overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtUrbanistSemiBold14Gray900.copyWith(letterSpacing: getHorizontalSize(0.2)));})), CustomImageView(svgPath: ImageConstant.imgCalendar20x20, height: getSize(20), width: getSize(20))]))), BlocSelector<EditProfileBloc, EditProfileState, TextEditingController?>(selector: (state) => state.emailController, builder: (context, emailController) {return CustomTextFormField(focusNode: FocusNode(), controller: emailController, hintText: "lbl_user_domain_com".tr, margin: getMargin(top: 24), padding: TextFormFieldPadding.PaddingT18_1, textInputType: TextInputType.emailAddress, suffix: Container(margin: getMargin(left: 30, top: 18, right: 20, bottom: 18), child: CustomImageView(svgPath: ImageConstant.imgArrowdown)), suffixConstraints: BoxConstraints(maxHeight: getVerticalSize(56)));}), BlocSelector<EditProfileBloc, EditProfileState, TextEditingController?>(selector: (state) => state.statusFillTypePhoneController, builder: (context, statusFillTypePhoneController) {return CustomTextFormField(focusNode: FocusNode(), controller: statusFillTypePhoneController, hintText: "msg_1_123_456_789_000".tr, margin: getMargin(top: 24), padding: TextFormFieldPadding.PaddingT21, textInputAction: TextInputAction.done, prefix: Container(margin: getMargin(left: 20, top: 19, right: 30, bottom: 19), child: CustomImageView(svgPath: ImageConstant.imgMaskgroup)), prefixConstraints: BoxConstraints(maxHeight: getVerticalSize(56)));}), BlocSelector<EditProfileBloc, EditProfileState, EditProfileModel?>(selector: (state) => state.editProfileModelObj, builder: (context, editProfileModelObj) {return CustomDropDown(focusNode: FocusNode(), icon: Container(margin: getMargin(left: 30, right: 18), child: CustomImageView(svgPath: ImageConstant.imgIconBottom)), hintText: "lbl_male".tr, margin: getMargin(top: 24, bottom: 5), padding: DropDownPadding.PaddingT19, items: editProfileModelObj?.dropdownItemList ?? [], onChanged: (value) {context.read<EditProfileBloc>().add(ChangeDropDownEvent(value: value));});})])), bottomNavigationBar: CustomButton(height: getVerticalSize(58), text: "lbl_update".tr, margin: getMargin(left: 24, right: 24, bottom: 48), variant: ButtonVariant.FillGray80002, padding: ButtonPadding.PaddingAll19))); } 
Future<void> onTapRowdate(BuildContext context) async  { var initialState = BlocProvider.of<EditProfileBloc>(context).state;DateTime? dateTime  = await showDatePicker(context: context, initialDate: DateTime.now() , firstDate: DateTime(1970) ,lastDate: DateTime(DateTime.now().year,DateTime.now().month,DateTime.now().day)); if (dateTime != null) {initialState.editProfileModelObj?.selectedDateTxt = dateTime;context.read<EditProfileBloc>().add(ChangeDateEvent(date: dateTime.format(SHORT_DATE_WITH_FULL_YEAR)));} } 
onTapArrowleft36(BuildContext context) { NavigatorService.goBack(); } 
 }
