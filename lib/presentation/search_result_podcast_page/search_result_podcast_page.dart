import '../search_result_podcast_page/widgets/listcountry_item_widget.dart';import '../search_result_podcast_page/widgets/listpodcasttitle1_item_widget.dart';import 'bloc/search_result_podcast_bloc.dart';import 'models/listcountry_item_model.dart';import 'models/listpodcasttitle1_item_model.dart';import 'models/search_result_podcast_model.dart';import 'package:basri_s_application28/core/app_export.dart';import 'package:flutter/material.dart';class SearchResultPodcastPage extends StatefulWidget {@override _SearchResultPodcastPageState createState() =>  _SearchResultPodcastPageState();
static Widget builder(BuildContext context) { return BlocProvider<SearchResultPodcastBloc>(create: (context) => SearchResultPodcastBloc(SearchResultPodcastState(searchResultPodcastModelObj: SearchResultPodcastModel()))..add(SearchResultPodcastInitialEvent()), child: SearchResultPodcastPage()); } 
onTapColumncountry(BuildContext context) { NavigatorService.pushNamed(AppRoutes.podcastDetailsScreen, ); } 
 }
class _SearchResultPodcastPageState extends State<SearchResultPodcastPage> with  AutomaticKeepAliveClientMixin<SearchResultPodcastPage> {@override bool get wantKeepAlive =>  true;
@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(backgroundColor: Colors.transparent, body: SizedBox(width: size.width, child: SingleChildScrollView(child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.topRight, child: Padding(padding: getPadding(left: 24, top: 24), child: Column(crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.start, children: [Padding(padding: getPadding(right: 24), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, crossAxisAlignment: CrossAxisAlignment.start, children: [Text("msg_podcasts_show".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtUrbanistRomanBold24), Padding(padding: getPadding(top: 1, bottom: 7), child: Text("lbl_see_all".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtUrbanistRomanBold16RedA70002.copyWith(letterSpacing: getHorizontalSize(0.2))))])), Align(alignment: Alignment.centerRight, child: Container(height: getVerticalSize(209), child: BlocSelector<SearchResultPodcastBloc, SearchResultPodcastState, SearchResultPodcastModel?>(selector: (state) => state.searchResultPodcastModelObj, builder: (context, searchResultPodcastModelObj) {return ListView.separated(padding: getPadding(top: 16), scrollDirection: Axis.horizontal, separatorBuilder: (context, index) {return SizedBox(height: getVerticalSize(12));}, itemCount: searchResultPodcastModelObj?.listcountryItemList.length ?? 0, itemBuilder: (context, index) {ListcountryItemModel model = searchResultPodcastModelObj?.listcountryItemList[index] ?? ListcountryItemModel(); return ListcountryItemWidget(model, onTapColumncountry: () {onTapColumncountry(context);});});}))), Padding(padding: getPadding(top: 25, right: 24), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, crossAxisAlignment: CrossAxisAlignment.start, children: [Padding(padding: getPadding(top: 1), child: Text("lbl_episodes".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtUrbanistRomanBold24)), Padding(padding: getPadding(bottom: 10), child: Text("lbl_see_all".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtUrbanistRomanBold16RedA70002.copyWith(letterSpacing: getHorizontalSize(0.2))))])), Padding(padding: getPadding(top: 21, right: 24), child: BlocSelector<SearchResultPodcastBloc, SearchResultPodcastState, SearchResultPodcastModel?>(selector: (state) => state.searchResultPodcastModelObj, builder: (context, searchResultPodcastModelObj) {return ListView.separated(physics: NeverScrollableScrollPhysics(), shrinkWrap: true, separatorBuilder: (context, index) {return SizedBox(height: getVerticalSize(24));}, itemCount: searchResultPodcastModelObj?.listpodcasttitle1ItemList.length ?? 0, itemBuilder: (context, index) {Listpodcasttitle1ItemModel model = searchResultPodcastModelObj?.listpodcasttitle1ItemList[index] ?? Listpodcasttitle1ItemModel(); return Listpodcasttitle1ItemWidget(model);});}))])))]))))); } 
onTapColumncountry(BuildContext context) { NavigatorService.pushNamed(AppRoutes.podcastDetailsScreen, ); } 
 }
